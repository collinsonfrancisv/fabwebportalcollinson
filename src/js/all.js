"use strict";

var callback = function callback() {
  document.documentElement.classList.remove("no-js");
  document.documentElement.classList.add("js");
  svg4everybody();

  var rem = function rem() {
    var html = document.getElementsByTagName('html')[0];
    return function () {
      return parseInt(window.getComputedStyle(html)['fontSize']);
    };
  }(); // iOS switch button toggle


  $(".c-toggle__checkbox").click(function () {
    var $toggleParent = $(this).parent();

    if ($(this).is(":checked")) {
      $toggleParent.removeClass("is-not-toggled");
      $toggleParent.addClass("is-toggled");

      if ($toggleParent.hasClass("is-toggled")) {
        $toggleParent.find(".c-toggle__icon").css("fill", "#92E842");
      }
    } else if ($(this).is(":not(:checked)")) {
      $toggleParent.removeClass("is-toggled");
      $toggleParent.addClass("is-not-toggled");

      if ($toggleParent.hasClass("is-not-toggled")) {
        $toggleParent.find(".c-toggle__icon").css("fill", "#9FA9B8");
      }
    }
  });
  $(".o-btn-prev").click(function () {
    var closestXGrid = $(this).parent().next(".horizontal-scroll");
    var gridItemWidth = $(this).parent().next(".horizontal-scroll").children(".l-card-grid__item").outerWidth(true);
    var leftPos = closestXGrid.scrollLeft();
    closestXGrid.animate({
      scrollLeft: leftPos - gridItemWidth
    }, 100);
  });
  $(".o-btn-next").click(function () {
    var closestXGrid = $(this).parent().next(".horizontal-scroll");
    var gridItemWidth = $(this).parent().next(".horizontal-scroll").children(".l-card-grid__item").outerWidth(true);
    var leftPos = closestXGrid.scrollLeft();
    closestXGrid.animate({
      scrollLeft: leftPos + gridItemWidth
    }, 100);
  });
};

if (document.readyState === "complete" || document.readyState !== "loading" && !document.documentElement.doScroll) {
  callback();
} else {
  document.addEventListener("DOMContentLoaded", callback);
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiY2FsbGJhY2siLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsImNsYXNzTGlzdCIsInJlbW92ZSIsImFkZCIsInN2ZzRldmVyeWJvZHkiLCJyZW0iLCJodG1sIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwYXJzZUludCIsIndpbmRvdyIsImdldENvbXB1dGVkU3R5bGUiLCIkIiwiY2xpY2siLCIkdG9nZ2xlUGFyZW50IiwicGFyZW50IiwiaXMiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwiaGFzQ2xhc3MiLCJmaW5kIiwiY3NzIiwiY2xvc2VzdFhHcmlkIiwibmV4dCIsImdyaWRJdGVtV2lkdGgiLCJjaGlsZHJlbiIsIm91dGVyV2lkdGgiLCJsZWZ0UG9zIiwic2Nyb2xsTGVmdCIsImFuaW1hdGUiLCJyZWFkeVN0YXRlIiwiZG9TY3JvbGwiLCJhZGRFdmVudExpc3RlbmVyIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFFBQVEsR0FBRyxTQUFYQSxRQUFXLEdBQVU7QUFDdkJDLEVBQUFBLFFBQVEsQ0FBQ0MsZUFBVCxDQUF5QkMsU0FBekIsQ0FBbUNDLE1BQW5DLENBQTBDLE9BQTFDO0FBQ0FILEVBQUFBLFFBQVEsQ0FBQ0MsZUFBVCxDQUF5QkMsU0FBekIsQ0FBbUNFLEdBQW5DLENBQXVDLElBQXZDO0FBQ0FDLEVBQUFBLGFBQWE7O0FBRWIsTUFBSUMsR0FBRyxHQUFHLFNBQVNBLEdBQVQsR0FBZTtBQUN2QixRQUFJQyxJQUFJLEdBQUdQLFFBQVEsQ0FBQ1Esb0JBQVQsQ0FBOEIsTUFBOUIsRUFBc0MsQ0FBdEMsQ0FBWDtBQUVBLFdBQU8sWUFBWTtBQUNmLGFBQU9DLFFBQVEsQ0FBQ0MsTUFBTSxDQUFDQyxnQkFBUCxDQUF3QkosSUFBeEIsRUFBOEIsVUFBOUIsQ0FBRCxDQUFmO0FBQ0gsS0FGRDtBQUdELEdBTlMsRUFBVixDQUx1QixDQWV2Qjs7O0FBQ0FLLEVBQUFBLENBQUMsQ0FBQyxxQkFBRCxDQUFELENBQXlCQyxLQUF6QixDQUErQixZQUFVO0FBQ3ZDLFFBQUlDLGFBQWEsR0FBR0YsQ0FBQyxDQUFDLElBQUQsQ0FBRCxDQUFRRyxNQUFSLEVBQXBCOztBQUVBLFFBQUdILENBQUMsQ0FBQyxJQUFELENBQUQsQ0FBUUksRUFBUixDQUFXLFVBQVgsQ0FBSCxFQUEwQjtBQUN4QkYsTUFBQUEsYUFBYSxDQUFDRyxXQUFkLENBQTBCLGdCQUExQjtBQUNBSCxNQUFBQSxhQUFhLENBQUNJLFFBQWQsQ0FBdUIsWUFBdkI7O0FBRUEsVUFBSUosYUFBYSxDQUFDSyxRQUFkLENBQXVCLFlBQXZCLENBQUosRUFBMEM7QUFDeENMLFFBQUFBLGFBQWEsQ0FBQ00sSUFBZCxDQUFtQixpQkFBbkIsRUFBc0NDLEdBQXRDLENBQTBDLE1BQTFDLEVBQWtELFNBQWxEO0FBQ0Q7QUFDRixLQVBELE1BU0ssSUFBR1QsQ0FBQyxDQUFDLElBQUQsQ0FBRCxDQUFRSSxFQUFSLENBQVcsZ0JBQVgsQ0FBSCxFQUFnQztBQUNuQ0YsTUFBQUEsYUFBYSxDQUFDRyxXQUFkLENBQTBCLFlBQTFCO0FBQ0FILE1BQUFBLGFBQWEsQ0FBQ0ksUUFBZCxDQUF1QixnQkFBdkI7O0FBRUEsVUFBSUosYUFBYSxDQUFDSyxRQUFkLENBQXVCLGdCQUF2QixDQUFKLEVBQThDO0FBQzVDTCxRQUFBQSxhQUFhLENBQUNNLElBQWQsQ0FBbUIsaUJBQW5CLEVBQXNDQyxHQUF0QyxDQUEwQyxNQUExQyxFQUFrRCxTQUFsRDtBQUNEO0FBQ0Y7QUFDRixHQXBCRDtBQXNCQVQsRUFBQUEsQ0FBQyxDQUFDLGFBQUQsQ0FBRCxDQUFpQkMsS0FBakIsQ0FBdUIsWUFBWTtBQUNqQyxRQUFJUyxZQUFZLEdBQUdWLENBQUMsQ0FBQyxJQUFELENBQUQsQ0FBUUcsTUFBUixHQUFpQlEsSUFBakIsQ0FBc0Isb0JBQXRCLENBQW5CO0FBQ0EsUUFBSUMsYUFBYSxHQUFHWixDQUFDLENBQUMsSUFBRCxDQUFELENBQVFHLE1BQVIsR0FBaUJRLElBQWpCLENBQXNCLG9CQUF0QixFQUE0Q0UsUUFBNUMsQ0FBcUQsb0JBQXJELEVBQTJFQyxVQUEzRSxDQUFzRixJQUF0RixDQUFwQjtBQUNBLFFBQUlDLE9BQU8sR0FBR0wsWUFBWSxDQUFDTSxVQUFiLEVBQWQ7QUFDQU4sSUFBQUEsWUFBWSxDQUFDTyxPQUFiLENBQXFCO0FBQ25CRCxNQUFBQSxVQUFVLEVBQUVELE9BQU8sR0FBR0g7QUFESCxLQUFyQixFQUVHLEdBRkg7QUFHRCxHQVBEO0FBU0FaLEVBQUFBLENBQUMsQ0FBQyxhQUFELENBQUQsQ0FBaUJDLEtBQWpCLENBQXVCLFlBQVk7QUFDakMsUUFBSVMsWUFBWSxHQUFHVixDQUFDLENBQUMsSUFBRCxDQUFELENBQVFHLE1BQVIsR0FBaUJRLElBQWpCLENBQXNCLG9CQUF0QixDQUFuQjtBQUNBLFFBQUlDLGFBQWEsR0FBR1osQ0FBQyxDQUFDLElBQUQsQ0FBRCxDQUFRRyxNQUFSLEdBQWlCUSxJQUFqQixDQUFzQixvQkFBdEIsRUFBNENFLFFBQTVDLENBQXFELG9CQUFyRCxFQUEyRUMsVUFBM0UsQ0FBc0YsSUFBdEYsQ0FBcEI7QUFDQSxRQUFJQyxPQUFPLEdBQUdMLFlBQVksQ0FBQ00sVUFBYixFQUFkO0FBQ0FOLElBQUFBLFlBQVksQ0FBQ08sT0FBYixDQUFxQjtBQUNuQkQsTUFBQUEsVUFBVSxFQUFFRCxPQUFPLEdBQUdIO0FBREgsS0FBckIsRUFFRyxHQUZIO0FBR0QsR0FQRDtBQVFELENBdkREOztBQXlEQSxJQUNJeEIsUUFBUSxDQUFDOEIsVUFBVCxLQUF3QixVQUF4QixJQUNDOUIsUUFBUSxDQUFDOEIsVUFBVCxLQUF3QixTQUF4QixJQUFxQyxDQUFDOUIsUUFBUSxDQUFDQyxlQUFULENBQXlCOEIsUUFGcEUsRUFHRTtBQUNBaEMsRUFBQUEsUUFBUTtBQUNULENBTEQsTUFLTztBQUNMQyxFQUFBQSxRQUFRLENBQUNnQyxnQkFBVCxDQUEwQixrQkFBMUIsRUFBOENqQyxRQUE5QztBQUNEIiwiZmlsZSI6ImFsbC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBjYWxsYmFjayA9IGZ1bmN0aW9uKCl7XG4gIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwibm8tanNcIik7XG4gIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwianNcIik7XG4gIHN2ZzRldmVyeWJvZHkoKTtcbiAgXG4gIHZhciByZW0gPSBmdW5jdGlvbiByZW0oKSB7XG4gICAgdmFyIGh0bWwgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaHRtbCcpWzBdO1xuICBcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcGFyc2VJbnQod2luZG93LmdldENvbXB1dGVkU3R5bGUoaHRtbClbJ2ZvbnRTaXplJ10pO1xuICAgIH1cbiAgfSgpO1xuICBcblxuXG4gIC8vIGlPUyBzd2l0Y2ggYnV0dG9uIHRvZ2dsZVxuICAkKFwiLmMtdG9nZ2xlX19jaGVja2JveFwiKS5jbGljayhmdW5jdGlvbigpe1xuICAgIHZhciAkdG9nZ2xlUGFyZW50ID0gJCh0aGlzKS5wYXJlbnQoKTtcblxuICAgIGlmKCQodGhpcykuaXMoXCI6Y2hlY2tlZFwiKSl7XG4gICAgICAkdG9nZ2xlUGFyZW50LnJlbW92ZUNsYXNzKFwiaXMtbm90LXRvZ2dsZWRcIik7XG4gICAgICAkdG9nZ2xlUGFyZW50LmFkZENsYXNzKFwiaXMtdG9nZ2xlZFwiKTtcblxuICAgICAgaWYgKCR0b2dnbGVQYXJlbnQuaGFzQ2xhc3MoXCJpcy10b2dnbGVkXCIpKSB7XG4gICAgICAgICR0b2dnbGVQYXJlbnQuZmluZChcIi5jLXRvZ2dsZV9faWNvblwiKS5jc3MoXCJmaWxsXCIsIFwiIzkyRTg0MlwiKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgZWxzZSBpZigkKHRoaXMpLmlzKFwiOm5vdCg6Y2hlY2tlZClcIikpe1xuICAgICAgJHRvZ2dsZVBhcmVudC5yZW1vdmVDbGFzcyhcImlzLXRvZ2dsZWRcIik7XG4gICAgICAkdG9nZ2xlUGFyZW50LmFkZENsYXNzKFwiaXMtbm90LXRvZ2dsZWRcIik7XG5cbiAgICAgIGlmICgkdG9nZ2xlUGFyZW50Lmhhc0NsYXNzKFwiaXMtbm90LXRvZ2dsZWRcIikpIHtcbiAgICAgICAgJHRvZ2dsZVBhcmVudC5maW5kKFwiLmMtdG9nZ2xlX19pY29uXCIpLmNzcyhcImZpbGxcIiwgXCIjOUZBOUI4XCIpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgJChcIi5vLWJ0bi1wcmV2XCIpLmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgY2xvc2VzdFhHcmlkID0gJCh0aGlzKS5wYXJlbnQoKS5uZXh0KFwiLmhvcml6b250YWwtc2Nyb2xsXCIpO1xuICAgIHZhciBncmlkSXRlbVdpZHRoID0gJCh0aGlzKS5wYXJlbnQoKS5uZXh0KFwiLmhvcml6b250YWwtc2Nyb2xsXCIpLmNoaWxkcmVuKFwiLmwtY2FyZC1ncmlkX19pdGVtXCIpLm91dGVyV2lkdGgodHJ1ZSk7XG4gICAgdmFyIGxlZnRQb3MgPSBjbG9zZXN0WEdyaWQuc2Nyb2xsTGVmdCgpO1xuICAgIGNsb3Nlc3RYR3JpZC5hbmltYXRlKHtcbiAgICAgIHNjcm9sbExlZnQ6IGxlZnRQb3MgLSBncmlkSXRlbVdpZHRoXG4gICAgfSwgMTAwKTtcbiAgfSk7XG4gIFxuICAkKFwiLm8tYnRuLW5leHRcIikuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgIHZhciBjbG9zZXN0WEdyaWQgPSAkKHRoaXMpLnBhcmVudCgpLm5leHQoXCIuaG9yaXpvbnRhbC1zY3JvbGxcIik7XG4gICAgdmFyIGdyaWRJdGVtV2lkdGggPSAkKHRoaXMpLnBhcmVudCgpLm5leHQoXCIuaG9yaXpvbnRhbC1zY3JvbGxcIikuY2hpbGRyZW4oXCIubC1jYXJkLWdyaWRfX2l0ZW1cIikub3V0ZXJXaWR0aCh0cnVlKTtcbiAgICB2YXIgbGVmdFBvcyA9IGNsb3Nlc3RYR3JpZC5zY3JvbGxMZWZ0KCk7XG4gICAgY2xvc2VzdFhHcmlkLmFuaW1hdGUoe1xuICAgICAgc2Nyb2xsTGVmdDogbGVmdFBvcyArIGdyaWRJdGVtV2lkdGhcbiAgICB9LCAxMDApO1xuICB9KTtcbn07XG5cbmlmIChcbiAgICBkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImNvbXBsZXRlXCIgfHxcbiAgICAoZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gXCJsb2FkaW5nXCIgJiYgIWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5kb1Njcm9sbClcbikge1xuICBjYWxsYmFjaygpO1xufSBlbHNlIHtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIiwgY2FsbGJhY2spO1xufSAgICAiXX0=
